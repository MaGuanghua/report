/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-03-19 03:21:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>pie.html</title>\r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//相关对象的名字，颜色，比例。封装在全局数组中可以动态的改变\r\n");
      out.write("\t\tvar objectName = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${text}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";\r\n");
      out.write("\t\tvar color = [\"#668800 \",\"#550088 \",\"#444444\",\"#FF8800\",\"#880000\"]; \r\n");
      out.write("\t\tvar data = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";\r\n");
      out.write("\t\t//饼图的中心坐标(相对画布)，以及半径  ,设计时要考虑不能超出画布\r\n");
      out.write("\t\tvar x = 200;\r\n");
      out.write("\t\tvar y = 200;\r\n");
      out.write("\t\tvar r = 150;\r\n");
      out.write("\t\t//鼠标点击后目标模块将要移动的圆心位置\r\n");
      out.write("\t\tvar moveX,moveY;\r\n");
      out.write("\t\t//鼠标点击后目标模块提示百分比div的中心位置\r\n");
      out.write("\t\tvar middleX,middleY;\r\n");
      out.write("\t\t//鼠标是否点击有效（用来控制当目标模块移动时，不允许其他操作）\r\n");
      out.write("\t\tvar ismouseForce = true;\r\n");
      out.write("\t\t//是否需要从新画图\r\n");
      out.write("\t\tvar isDraw = true;\t\t\r\n");
      out.write("\t\t//点击饼图相关模块，弹出的距离，设为半径的1/10\t\t\r\n");
      out.write("\t\tvar distance = r/10;\r\n");
      out.write("\t\t//点击的模块号，与相关数组的下标一致\r\n");
      out.write("\t\tvar downNumber;\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 画饼图的基本方法\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\tfunction drawCircle(px,py){\r\n");
      out.write("\t\t\tvar canvas = document.getElementById(\"circle\");  \r\n");
      out.write("\t\t\tvar ctx = canvas.getContext(\"2d\"); \r\n");
      out.write("\t\t\t//每次画图前先将原来的图清除\r\n");
      out.write("\t\t\tctx.clearRect(0,0,document.getElementById(\"circle\").offsetWidth,\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"circle\").offsetHeight);\r\n");
      out.write("\t\t\tvar ctx = canvas.getContext(\"2d\"); \r\n");
      out.write("\t\t\tvar startPoint = 0;\r\n");
      out.write("\t\t\tfor(i=0;i<data.length;i++){\t    \t\r\n");
      out.write("\t\t\t    //路径开始\r\n");
      out.write("\t\t\t\tctx.beginPath(); \r\n");
      out.write("\t\t\t\t//边线宽度\r\n");
      out.write("\t\t\t\tctx.lineWidth = 1;\r\n");
      out.write("\t\t\t\t//没有阴影效果\r\n");
      out.write("\t\t\t\tctx.strokeStyle = \"#FFFFFF\"; \t\t\t   \t\t\r\n");
      out.write("\t\t\t\tctx.shadowOffsetX = 0;\r\n");
      out.write("\t\t\t\tctx.shadowOffsetY = 0;\r\n");
      out.write("\t\t\t\tctx.shadowBlur = 0;\t\r\n");
      out.write("\t\t\t\t//填充颜色\r\n");
      out.write("\t\t\t\tctx.fillStyle = color[i];     \t\t\t   \t\r\n");
      out.write("\t\t\t\tif(i==downNumber){//如果是点击的模块，重新设定样式\r\n");
      out.write("\t\t\t\t   \t//边线样式\r\n");
      out.write("\t\t\t\t   \tctx.shadowColor = \"#888888\";\r\n");
      out.write("\t\t\t\t   \tctx.lineWidth = 2;\r\n");
      out.write("\t\t\t\t   \t//设置阴影效果\r\n");
      out.write("\t\t\t\t   \tctx.strokeStyle = \"#000000\"; \r\n");
      out.write("\t\t\t\t   \tctx.shadowBlur = 5;\r\n");
      out.write("\t\t\t\t\tctx.shadowOffsetX = 5;\r\n");
      out.write("\t\t\t\t\tctx.shadowOffsetY = 5;\r\n");
      out.write("\t\t\t\t   \tctx.moveTo(px,py); \r\n");
      out.write("\t\t\t\t   \tctx.arc(px,py,r,startPoint,startPoint+Math.PI*2*(data[i]/100),false); \r\n");
      out.write("\t\t\t\t }else{//如果不是点击的模块用默认的样式画\r\n");
      out.write("\t\t\t\t   \tctx.moveTo(x,y); \r\n");
      out.write("\t\t\t\t   \tctx.arc(x,y,r,startPoint,startPoint+Math.PI*2*(data[i]/100),false);  \r\n");
      out.write("\t\t\t\t }\t\t   \r\n");
      out.write("\t\t\t\t ctx.closePath(); \t    \t\t\t    \r\n");
      out.write("\t\t\t\t ctx.fill(); \r\n");
      out.write("\t\t\t\t ctx.stroke();  \t\t\t   \t \t\t\t   \t\r\n");
      out.write("\t\t\t\t startPoint+=Math.PI*2*(data[i]/100);  \t\t\t   \t\r\n");
      out.write("\t\t\t }\t\t   \t  \t\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 工具方法，获得模块点击后，中心偏移的相对(相对于画布)位置\t\t\t\r\n");
      out.write("\t\t* 和显示提示百分比div的中心位置.保存于全局变量中\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction getMovePoint(){\r\n");
      out.write("\t\t\t//获得中心偏移的相对(相对于画布)位置\r\n");
      out.write("\t\t\tvar frontAngle = 0;\r\n");
      out.write("\t\t\t\tfor(var i=0;i<downNumber;i++){\r\n");
      out.write("\t\t\t\t    frontAngle += Math.PI*2*(data[i]/100);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\tvar angle = Math.PI*2*(data[downNumber]/100)/2+frontAngle;\t\r\n");
      out.write("\t\t\tmoveX = x + Math.cos(angle)*distance;\r\n");
      out.write("\t\t\tmoveY = y + Math.sin(angle)*distance;\r\n");
      out.write("\t\t\t//获得提示百分比div的中心位置(相对于画布)\r\n");
      out.write("\t\t\tvar showX = x + Math.cos(angle)*(1.5*r)+document.getElementById(\"circle\").\r\n");
      out.write("\t\t\t\tgetBoundingClientRect().left;\r\n");
      out.write("\t\t\tvar showY = y + Math.sin(angle)*(1.5*r)+document.getElementById(\"circle\").\r\n");
      out.write("\t\t\t\tgetBoundingClientRect().top;\t\t\r\n");
      out.write("\t\t\tif(showX>x&&showY>y){\r\n");
      out.write("\t\t\t\tmiddleX = showX-document.getElementById(\"prompt\").offsetWidth/2; \r\n");
      out.write("\t\t\t\tmiddleY = showY-document.getElementById(\"prompt\").offsetHeight/2; \r\n");
      out.write("\t\t\t}else if(showX<x&&showY>y){\t\t\t\t\t\r\n");
      out.write("\t\t\t\tmiddleX = showX-document.getElementById(\"prompt\").offsetWidth/2; \r\n");
      out.write("\t\t\t\tmiddleY = showY+document.getElementById(\"prompt\").offsetHeight/2; \r\n");
      out.write("\t\t\t}else if(showX<x&&showY<y){\r\n");
      out.write("\t\t\t\tmiddleX = showX-document.getElementById(\"prompt\").offsetWidth/2; \r\n");
      out.write("\t\t\t\tmiddleY = showY+document.getElementById(\"prompt\").offsetHeight/2; \r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tmiddleX = showX-document.getElementById(\"prompt\").offsetWidth/2; \r\n");
      out.write("\t\t\t\tmiddleY = showY+document.getElementById(\"prompt\").offsetHeight/2; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 获取鼠标坐标(解决浏览器兼容性问题)\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction mousePos(e){ \r\n");
      out.write("\t\t    var x,y; \r\n");
      out.write("\t\t    var e = e||window.event; \r\n");
      out.write("\t\t    return { \r\n");
      out.write("\t\t        x:e.clientX+document.body.scrollLeft+document.documentElement.scrollLeft, \r\n");
      out.write("\t\t        y:e.clientY+document.body.scrollTop+document.documentElement.scrollTop \r\n");
      out.write("\t\t    }; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 鼠标点击在饼图上，整个程序的核心控制器1\r\n");
      out.write("\t\t*\t\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction mouseDownpie(e){\r\n");
      out.write("\t\t\tif(ismouseForce){\r\n");
      out.write("\t\t\t\tvar point = mousePos(e);\r\n");
      out.write("\t\t\t\tvar downX = point[\"x\"] - document.getElementById(\"circle\").getBoundingClientRect().left;\r\n");
      out.write("\t\t\t\tvar downY = point[\"y\"] - document.getElementById(\"circle\").getBoundingClientRect().top;\r\n");
      out.write("\t\t\t\tgetNumber(downX,downY);\t\r\n");
      out.write("\t\t\t\t//获取中心点移动后的坐标\r\n");
      out.write("\t\t\t\tif(downNumber!=null){\r\n");
      out.write("\t\t\t\t\tgetMovePoint();\r\n");
      out.write("\t\t\t\t}\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\tif(isDraw){//如果需要重新画图\r\n");
      out.write("\t\t\t\t\t//显示提示信息\r\n");
      out.write("\t\t\t\t\tshowPercent();\r\n");
      out.write("\t\t\t\t\t//画饼图\r\n");
      out.write("\t\t\t\t\tdrawMovePie();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 鼠标点击在按钮上，整个程序的核心控制器2\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction mouseDownInput(e){\r\n");
      out.write("\t\t\tif(ismouseForce){\r\n");
      out.write("\t\t\t\tvar e = e||window.event; \t\t\r\n");
      out.write("\t\t\t\tvar name = e.target.value;\r\n");
      out.write("\t\t\t\t//获取点击模块的downNumber\t\t\t\r\n");
      out.write("\t\t\t\tfor(var i=0;i<objectName.length;i++){\r\n");
      out.write("\t\t\t\t\tif(objectName[i]== name){\r\n");
      out.write("\t\t\t\t\t\tif(i==downNumber){\r\n");
      out.write("\t\t\t\t\t\t\tdownNumber = null;\r\n");
      out.write("\t\t\t\t\t\t\tisDraw = true;\t\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tdownNumber = i;\r\n");
      out.write("\t\t\t\t\t\t\tisDraw = true;\t\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tbreak;\t\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//获取中心点移动后的坐标\r\n");
      out.write("\t\t\t\tif(downNumber!=null){\r\n");
      out.write("\t\t\t\t\tgetMovePoint();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(isDraw){//如果需要重新画图\r\n");
      out.write("\t\t\t\t\t//显示提示信息\r\n");
      out.write("\t\t\t\t\tshowPercent();\t\r\n");
      out.write("\t\t\t\t\t//画饼图\r\n");
      out.write("\t\t\t\t\tdrawMovePie();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 页面加载完显示饼图和操作按钮\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\twindow.onload=function(){\r\n");
      out.write("\t\t\tshowSheet();//操作按钮\r\n");
      out.write("\t\t\tdrawCircle();//饼图\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 定时器实现饼图移动的动态效果\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction drawMovePie(){\r\n");
      out.write("\t\t\tvar n = 0;\r\n");
      out.write("\t\t\tvar nx = x;\r\n");
      out.write("\t\t\tvar ny = y;\t\r\n");
      out.write("\t\t\tvar timer = setInterval( function(){\r\n");
      out.write("\t\t\t\t//定时器开始时鼠标点击失效\r\n");
      out.write("\t\t\t\tismouseForce = false;\t\t\r\n");
      out.write("\t\t\t\tdrawCircle(nx,ny);\t\r\n");
      out.write("\t\t\t\t\tnx = (moveX-x)/distance + nx;\r\n");
      out.write("\t\t\t\t\tny = (moveY-y)/distance + ny;\r\n");
      out.write("\t\t\t\t\tn++;\r\n");
      out.write("\t\t\t\tif(n == distance){\r\n");
      out.write("\t\t\t\t\tclearInterval(timer);\r\n");
      out.write("\t\t\t\t\t//定时器结束鼠标点击有效\r\n");
      out.write("\t\t\t\t\tismouseForce = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, 30);\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 获得鼠标点击的那个模块的模块号，保存在全局变量downNumber中\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction getNumber(downX,downY){\r\n");
      out.write("\t\t\t//鼠标点击的位置与中心点的距离\r\n");
      out.write("\t\t\tvar dist = Math.sqrt((x-downX)*(x-downX)+(y-downY)*(y-downY));\r\n");
      out.write("\t\t\tvar per;//点击点与中心点连线与起始线夹角所占饼图的百分比\r\n");
      out.write("\t\t\tif(downX>x&&downY>y){\r\n");
      out.write("\t\t\t\tper = (2*Math.atan((downY-y)/(downX-x))/Math.PI)/4;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(downX<x&&downY>y){\t\t\t\t\t\r\n");
      out.write("\t\t\t\tper = 1/4+(2*Math.atan((x-downX)/(downY-y))/Math.PI)/4;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(downX<x&&downY<y){\r\n");
      out.write("\t\t\t\tper = 2/4+(2*Math.atan((downY-y)/(downX-x))/Math.PI)/4;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\tper = 3/4+(2*Math.atan((downX-x)/(y-downY))/Math.PI)/4;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//遍历求和求出每个模块的边线与起始线夹角所占饼图的百分比\t\t\t\t\t\r\n");
      out.write("\t\t\tvar sum = 0;\r\n");
      out.write("\t\t\tfor(var i=0;i<data.length;i++){\r\n");
      out.write("\t\t\t\tsum += data[i]/100;\r\n");
      out.write("\t\t\t\t//当模块的比例大于点击点的比例时\r\n");
      out.write("\t\t\t\tif(sum>per){\r\n");
      out.write("\t\t\t\t\t//如果点击的是已经弹起的那个模块，判断距离为R加上弹起的移动距离\r\n");
      out.write("\t\t\t\t\tif(i==downNumber&&(dist-distance)<r){\r\n");
      out.write("\t\t\t\t\t\t//设置成没有模块弹起\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tdownNumber= null;\t\r\n");
      out.write("\t\t\t\t\t\tisDraw = true;\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}else if(dist<r){//如果点击不是弹起的那个模块，判断距离为半径R\r\n");
      out.write("\t\t\t\t\t\t//该模块设置成弹起模块\r\n");
      out.write("\t\t\t\t\t\tdownNumber = i;\t\r\n");
      out.write("\t\t\t\t\t\tisDraw = true;\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t//点击在模块外没有必要重新画图\r\n");
      out.write("\t\t\t\t\t\tisDraw = false;\r\n");
      out.write("\t\t\t\t\t}\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t}\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 定时器实现动态显示相关模块的提示信息。如January : 35%\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction showPercent(){\r\n");
      out.write("\t\t\t//获得提示信息内容\r\n");
      out.write("\t\t\tvar str = \"\";\r\n");
      out.write("\t\t\tif(downNumber!=null){\r\n");
      out.write("\t\t\t\tstr = objectName[downNumber]+\" : \"+data[downNumber]+\"%\";\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"prompt\").style.color = color[downNumber];\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tstr = \"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//设定样式并显示内容\t\r\n");
      out.write("\t\t\tvar elem = document.getElementById(\"prompt\");\r\n");
      out.write("\t\t\telem.style.left = middleX+\"px\";\r\n");
      out.write("\t\t\telem.style.top = middleY+\"px\";\r\n");
      out.write("\t\t\t//最开始透明级别为0\r\n");
      out.write("\t\t\tsetOpacity( elem, 0 );\r\n");
      out.write("\t\t\telem.innerHTML = str;\r\n");
      out.write("\t\t\t//淡入效果实现\t\t\r\n");
      out.write("\t\t\tfadeIn(elem,100);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 工具方法，实现淡入效果    \r\n");
      out.write("\t\t* 参数说明  \r\n");
      out.write("\t\t* elem==>需要淡入的元素     \r\n");
      out.write("\t\t* speed==>淡入速度,正整数      \r\n");
      out.write("\t\t**/     \r\n");
      out.write("\t\tfunction fadeIn(elem,speed){       \r\n");
      out.write("\t\t   \tlevel = 0;\r\n");
      out.write("\t\t    var fadeInTimer = setInterval(function(){\r\n");
      out.write("\t\t    \t setOpacity( elem, level );\r\n");
      out.write("\t\t    \t level = level+5;\r\n");
      out.write("\t\t    \t if(level==100){\r\n");
      out.write("\t\t    \t \tclearInterval(fadeInTimer);\r\n");
      out.write("\t\t    \t }\r\n");
      out.write("\t\t    }, speed);  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 工具方法，设置元素的透明度级别\r\n");
      out.write("\t\t* level==>0-100的数字（级别）\r\n");
      out.write("\t\t* 解决浏览器的兼容性问题\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction setOpacity( elem, level ) {\t\t \t\r\n");
      out.write("\t\t \tif ( elem.filters ){//如果滤镜存在是IE，于是设置Alpha滤镜\r\n");
      out.write("\t\t   \t\telem.style.filter = 'alpha(opacity=' + level + ')';\r\n");
      out.write("\t\t \t}else{//否则，使用W3C的opacity属性\r\n");
      out.write("\t\t   \t\telem.style.opacity = level/100;\r\n");
      out.write("\t\t \t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t* 动态生成饼图中各组分的按钮方法，其中颜色与按钮的颜色对应\r\n");
      out.write("\t\t*\r\n");
      out.write("\t\t**/\r\n");
      out.write("\t\tfunction showSheet(){\r\n");
      out.write("\t\t\t//给按钮定位\r\n");
      out.write("\t\t\tdocument.getElementById(\"sheet\").style.left = document.getElementById(\"circle\").\r\n");
      out.write("\t\t\t\tgetBoundingClientRect().left-document.getElementById(\"sheet\").offsetWidth+\"px\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"sheet\").style.top = document.getElementById(\"circle\").\r\n");
      out.write("\t\t\t\tgetBoundingClientRect().top+\"px\";\r\n");
      out.write("\t\t\t//生成前先清空div\r\n");
      out.write("\t\t\tdocument.getElementById(\"sheet\").innerHTML = \"\";\r\n");
      out.write("\t\t\t//动态的生成按钮\r\n");
      out.write("\t\t\tvar str = \"\";\r\n");
      out.write("\t\t\tfor(var i=0;i<objectName.length;i++){\r\n");
      out.write("\t\t\t\tstr += \"<input onclick='mouseDownInput(event)' type='button' value='\"+objectName[i]+\r\n");
      out.write("\t\t\t\t\t\"' style='background-color: \"+color[i]+\";'/>\";\t\t\t\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"sheet\").innerHTML = str;\t\t\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\tbody{\r\n");
      out.write("\t\t\t\tmargin:50px auto;\r\n");
      out.write("\t\t\t\ttext-align: center;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#sheet{\r\n");
      out.write("\t\t\t\tposition:absolute;\r\n");
      out.write("\t\t\t\twidth:150px; \r\n");
      out.write("\t\t\t\theight:400px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#sheet>input{\r\n");
      out.write("\t\t\t\theight: 30px;\r\n");
      out.write("\t\t\t\twidth: 80px;\r\n");
      out.write("\t\t\t\tmargin: 5px auto;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#prompt{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\tmargin-left:10px;\r\n");
      out.write("\t\t\t\twidth:100px;\r\n");
      out.write("\t\t\t\theight: 20px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#circle{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\ttop:8%;\r\n");
      out.write("\t\t\t\tleft:20%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>  \r\n");
      out.write("  </head>\r\n");
      out.write("  <body >\r\n");
      out.write("  \t<div id=\"prompt\"></div>\r\n");
      out.write("    <canvas id=\"circle\" width=\"400px\" height=\"400px\" onclick=\"mouseDownpie(event);\">\r\n");
      out.write("    \t您的浏览器暂不支持Canvas标签\r\n");
      out.write("    </canvas> \r\n");
      out.write("    <div id=\"sheet\"></div> \t\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
